{"ast":null,"code":"var _jsxFileName = \"/home/rafael/IdeaProjects/nexti-test-front/src/client/NewClient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport InputMask from 'react-input-mask';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BASE_PRODUCT_URL, post } from \"../requests/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nconst NewClient = ({\n  open,\n  handleClose,\n  getClients\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [cpf, setCpf] = useState('');\n  const [birthdate, setBirthdate] = useState(new Date());\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleCpfChange = e => {\n    setCpf(e.target.value);\n  };\n\n  const handleDateChange = date => {\n    setBirthdate(date);\n  };\n\n  const handleSave = () => {\n    const json = {\n      name,\n      cpf,\n      birthdate\n    };\n    console.log(json);\n    const response = post(json, BASE_PRODUCT_URL);\n    response.then(res => {\n      getClients();\n    }, err => {\n      console.log(err);\n    });\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"Novo cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: name,\n          onChange: e => handleNameChange(e),\n          autoFocus: true,\n          id: \"name\",\n          label: \"Nome\",\n          type: \"text\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n          mask: \"999.999.999-99\",\n          disabled: false,\n          maskChar: \" \",\n          value: cpf,\n          onChange: e => handleCpfChange(e),\n          children: () => /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"CPF\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            format: \"dd/MM/yyyy\",\n            id: \"birthdate\",\n            label: \"Data de nascimento\",\n            value: birthdate,\n            onChange: handleDateChange,\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        color: \"primary\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewClient, \"hVopytElvxwnmiqlgyiGXB3nNTQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewClient;\nexport default NewClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewClient\");","map":{"version":3,"sources":["/home/rafael/IdeaProjects/nexti-test-front/src/client/NewClient.js"],"names":["React","useState","DialogTitle","DialogContent","TextField","DialogActions","Button","Dialog","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","InputMask","makeStyles","BASE_PRODUCT_URL","post","useStyles","theme","form","margin","spacing","NewClient","open","handleClose","getClients","classes","name","setName","cpf","setCpf","birthdate","setBirthdate","Date","handleNameChange","e","target","value","handleCpfChange","handleDateChange","date","handleSave","json","console","log","response","then","res","err"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport InputMask from 'react-input-mask';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {BASE_PRODUCT_URL, post} from \"../requests/requests\";\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nconst NewClient = ({open, handleClose, getClients}) => {\n    const classes = useStyles();\n    const [name, setName] = useState('');\n    const [cpf, setCpf] = useState('');\n    const [birthdate, setBirthdate] = useState(new Date());\n\n    const handleNameChange = (e) => {\n        setName(e.target.value);\n    }\n    const handleCpfChange = (e) => {\n        setCpf(e.target.value);\n    }\n    const handleDateChange = (date) => {\n        setBirthdate(date);\n    }\n\n    const handleSave = () => {\n        const json = {\n            name,\n            cpf,\n            birthdate\n        };\n        console.log(json);\n        const response = post(json, BASE_PRODUCT_URL);\n        response.then(res => {\n            getClients();\n        }, err => {\n            console.log(err);\n        });\n        handleClose();\n    }\n\n    return (\n        <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" fullWidth>\n            <DialogTitle id=\"form-dialog-title\">Novo cliente</DialogTitle>\n            <DialogContent>\n                <form className={classes.form}>\n                    <TextField\n                        value={name}\n                        onChange={e => handleNameChange(e)}\n                        autoFocus\n                        id=\"name\"\n                        label=\"Nome\"\n                        type=\"text\"\n                        fullWidth\n                    />\n                    <InputMask\n                        mask=\"999.999.999-99\"\n                        disabled={false}\n                        maskChar=\" \"\n                        value={cpf}\n                        onChange={e => handleCpfChange(e)}\n                    >\n                        {() => <TextField label=\"CPF\" fullWidth/>}\n                    </InputMask>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            format=\"dd/MM/yyyy\"\n                            id=\"birthdate\"\n                            label=\"Data de nascimento\"\n                            value={birthdate}\n                            onChange={handleDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                            fullWidth\n                        />\n                    </MuiPickersUtilsProvider>\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancelar\n                </Button>\n                <Button onClick={handleSave} color=\"primary\">\n                    Salvar\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default NewClient;"]},"metadata":{},"sourceType":"module"}