{"ast":null,"code":"var _jsxFileName = \"/home/rafael/IdeaProjects/nexti-test-front/src/order/Order.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from \"@material-ui/core/TextField\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Input from \"@material-ui/core/Input\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  form: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\n\nconst Order = ({\n  open,\n  handleClose,\n  getOrders,\n  id,\n  client,\n  products,\n  date,\n  total,\n  handleClientChange,\n  handleProductsChange\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const handleSave = () => {\n    console.log(client);\n    console.log(products);\n    getOrders();\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          onClick: handleClose,\n          \"aria-label\": \"close\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          color: \"inherit\",\n          onClick: handleSave,\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        alignContent: 'center',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"clients-combo-box\",\n          value: client,\n          onChange: (event, newValue) => {\n            console.log(newValue);\n            setClient(newValue);\n          },\n          options: clients,\n          getOptionLabel: product => product.name,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Cliente\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"products-combo-box\",\n          onChange: (event, newValue) => {\n            if (!!newValue) {\n              const np = {\n                id: newValue.id,\n                name: newValue.name,\n                qt: 1,\n                max: newValue.quantity\n              };\n              products[np.id] = np;\n              setProducts([...products]);\n            }\n          },\n          options: productList,\n          getOptionLabel: product => product.name,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Adicionar produto\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Quantidade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: products.filter(p => !!p).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: true,\n                    children: /*#__PURE__*/_jsxDEV(Slider, {\n                      value: typeof row.quantity === 'number' ? row.quantity : 1,\n                      onChange: (event, newValue) => handleSliderChange(event, newValue, row.id),\n                      \"aria-labelledby\": \"input-slider\",\n                      min: 1,\n                      max: row.max\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      className: classes.input,\n                      value: row.quantity,\n                      margin: \"dense\",\n                      onChange: event => handleInputChange(event, row.id),\n                      onBlur: () => handleBlur(row.id),\n                      inputProps: {\n                        step: 1,\n                        min: 1,\n                        max: row.max,\n                        type: 'number',\n                        'aria-labelledby': 'input-slider'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => {\n                    products[row.id] = null;\n                    setProducts([...products]);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Order, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Order;\nexport default Order;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"Order\");","map":{"version":3,"sources":["/home/rafael/IdeaProjects/nexti-test-front/src/order/Order.js"],"names":["React","makeStyles","Button","Dialog","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","TextField","Autocomplete","Table","TableHead","TableRow","TableCell","TableBody","Grid","Slider","Input","DeleteIcon","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","form","margin","Transition","forwardRef","props","ref","Order","open","handleClose","getOrders","id","client","products","date","total","handleClientChange","handleProductsChange","classes","handleSave","console","log","width","alignContent","marginRight","marginTop","event","newValue","setClient","clients","product","name","params","np","qt","max","quantity","setProducts","productList","filter","p","map","row","handleSliderChange","input","handleInputChange","handleBlur","step","min","type"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,SAAS,GAAGpB,UAAU,CAAEqB,KAAD,KAAY;AACrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAD6B;AAIrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADT;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAJ8B;AAQrCC,EAAAA,IAAI,EAAE;AACF,4BAAwB;AACpBC,MAAAA,MAAM,EAAER,KAAK,CAACK,OAAN,CAAc,CAAd;AADY;AADtB;AAR+B,CAAZ,CAAD,CAA5B;AAeA,MAAMI,UAAU,gBAAG/B,KAAK,CAACgC,UAAN,MAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAChE,sBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA,GAA3B;AAAA,OAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFkB,CAAnB;MAAMF,U;;AAIN,MAAMI,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,WAAP;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA,EAA/B;AAAmCC,EAAAA,MAAnC;AAA2CC,EAAAA,QAA3C;AAAqDC,EAAAA,IAArD;AAA2DC,EAAAA,KAA3D;AAAkEC,EAAAA,kBAAlE;AAAsFC,EAAAA;AAAtF,CAAD,KAAiH;AAAA;;AAC3H,QAAMC,OAAO,GAAGzB,SAAS,EAAzB;;AAEA,QAAM0B,UAAU,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAH,IAAAA,SAAS;AACTD,IAAAA,WAAW;AACd,GALD;;AAOA,sBACI,QAAC,MAAD;AAAQ,IAAA,UAAU,MAAlB;AAAmB,IAAA,IAAI,EAAED,IAAzB;AAA+B,IAAA,OAAO,EAAEC,WAAxC;AAAqD,IAAA,mBAAmB,EAAEN,UAA1E;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEe,OAAO,CAACvB,MAA3B;AAAA,6BACI,QAAC,OAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAyB,UAAA,KAAK,EAAC,SAA/B;AAAyC,UAAA,OAAO,EAAEc,WAAlD;AAA+D,wBAAW,OAA1E;AAAA,iCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAES,OAAO,CAACrB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,MAAD;AAAQ,UAAA,SAAS,MAAjB;AAAkB,UAAA,KAAK,EAAC,SAAxB;AAAkC,UAAA,OAAO,EAAEsB,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAK,MAAA,KAAK,EAAE;AAACG,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,YAAY,EAAE,QAA7B;AAAuCzB,QAAAA,UAAU,EAAE,MAAnD;AAA2D0B,QAAAA,WAAW,EAAE,MAAxE;AAAgFC,QAAAA,SAAS,EAAE;AAA3F,OAAZ;AAAA,6BACI;AAAM,QAAA,SAAS,EAAEP,OAAO,CAACjB,IAAzB;AAAA,gCACI,QAAC,YAAD;AACI,UAAA,EAAE,EAAC,mBADP;AAEI,UAAA,KAAK,EAAEW,MAFX;AAGI,UAAA,QAAQ,EAAE,CAACc,KAAD,EAAQC,QAAR,KAAqB;AAC3BP,YAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACAC,YAAAA,SAAS,CAACD,QAAD,CAAT;AACH,WANL;AAOI,UAAA,OAAO,EAAEE,OAPb;AAQI,UAAA,cAAc,EAAGC,OAAD,IAAaA,OAAO,CAACC,IARzC;AASI,UAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,YAAA,KAAK,EAAC,SAA7B;AAAuC,YAAA,SAAS;AAAhD;AAAA;AAAA;AAAA;AAAA;AAT7B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,YAAD;AACI,UAAA,EAAE,EAAC,oBADP;AAEI,UAAA,QAAQ,EAAE,CAACN,KAAD,EAAQC,QAAR,KAAqB;AAC3B,gBAAG,CAAC,CAACA,QAAL,EAAe;AACX,oBAAMM,EAAE,GAAG;AACPtB,gBAAAA,EAAE,EAAEgB,QAAQ,CAAChB,EADN;AAEPoB,gBAAAA,IAAI,EAAEJ,QAAQ,CAACI,IAFR;AAGPG,gBAAAA,EAAE,EAAE,CAHG;AAIPC,gBAAAA,GAAG,EAAER,QAAQ,CAACS;AAJP,eAAX;AAMAvB,cAAAA,QAAQ,CAACoB,EAAE,CAACtB,EAAJ,CAAR,GAAkBsB,EAAlB;AACAI,cAAAA,WAAW,CAAC,CAAC,GAAGxB,QAAJ,CAAD,CAAX;AACH;AACJ,WAbL;AAcI,UAAA,OAAO,EAAEyB,WAdb;AAeI,UAAA,cAAc,EAAGR,OAAD,IAAaA,OAAO,CAACC,IAfzC;AAgBI,UAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,YAAA,KAAK,EAAC,mBAA7B;AAAiD,YAAA,SAAS;AAA1D;AAAA;AAAA;AAAA;AAAA;AAhB7B;AAAA;AAAA;AAAA;AAAA,gBAZJ,eA8BI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAA,kCACI,QAAC,SAAD;AAAA,mCACI,QAAC,QAAD;AAAA,sCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,SAAD;AAAA,sBACKnB,QAAQ,CAAC0B,MAAT,CAAiBC,CAAD,IAAM,CAAC,CAACA,CAAxB,EAA2BC,GAA3B,CAAgCC,GAAD,iBAC5B,QAAC,QAAD;AAAA,sCACI,QAAC,SAAD;AAAA,0BAAYA,GAAG,CAAC/B;AAAhB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,SAAD;AAAA,0BAAY+B,GAAG,CAACX;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,SAAD;AAAA,uCACI,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAgB,kBAAA,OAAO,EAAE,CAAzB;AAA4B,kBAAA,UAAU,EAAC,QAAvC;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,MAAb;AAAA,2CACI,QAAC,MAAD;AACI,sBAAA,KAAK,EAAE,OAAOW,GAAG,CAACN,QAAX,KAAwB,QAAxB,GAAmCM,GAAG,CAACN,QAAvC,GAAkD,CAD7D;AAEI,sBAAA,QAAQ,EAAE,CAACV,KAAD,EAAQC,QAAR,KAAqBgB,kBAAkB,CAACjB,KAAD,EAAQC,QAAR,EAAkBe,GAAG,CAAC/B,EAAtB,CAFrD;AAGI,yCAAgB,cAHpB;AAII,sBAAA,GAAG,EAAE,CAJT;AAKI,sBAAA,GAAG,EAAE+B,GAAG,CAACP;AALb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAUI,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAA,2CACI,QAAC,KAAD;AACI,sBAAA,SAAS,EAAEjB,OAAO,CAAC0B,KADvB;AAEI,sBAAA,KAAK,EAAEF,GAAG,CAACN,QAFf;AAGI,sBAAA,MAAM,EAAC,OAHX;AAII,sBAAA,QAAQ,EAAGV,KAAD,IAAWmB,iBAAiB,CAACnB,KAAD,EAAQgB,GAAG,CAAC/B,EAAZ,CAJ1C;AAKI,sBAAA,MAAM,EAAE,MAAMmC,UAAU,CAACJ,GAAG,CAAC/B,EAAL,CAL5B;AAMI,sBAAA,UAAU,EAAE;AACRoC,wBAAAA,IAAI,EAAE,CADE;AAERC,wBAAAA,GAAG,EAAE,CAFG;AAGRb,wBAAAA,GAAG,EAAEO,GAAG,CAACP,GAHD;AAIRc,wBAAAA,IAAI,EAAE,QAJE;AAKR,2CAAmB;AALX;AANhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAgCI,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,uCACI,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAE,MAAM;AACvBpC,oBAAAA,QAAQ,CAAC6B,GAAG,CAAC/B,EAAL,CAAR,GAAmB,IAAnB;AACA0B,oBAAAA,WAAW,CAAC,CAAC,GAAGxB,QAAJ,CAAD,CAAX;AACH,mBAHD;AAAA,yCAII,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAhCJ;AAAA,eAAe6B,GAAG,CAAC/B,EAAnB;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgHH,CA1HD;;GAAMJ,K;UACcd,S;;;MADdc,K;AA4HN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from \"@material-ui/core/TextField\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Input from \"@material-ui/core/Input\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    form: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Order = ({open, handleClose, getOrders, id, client, products, date, total, handleClientChange, handleProductsChange}) => {\n    const classes = useStyles();\n\n    const handleSave = () => {\n        console.log(client);\n        console.log(products);\n        getOrders();\n        handleClose();\n    }\n\n    return (\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Pedido\n                    </Typography>\n                    <Button autoFocus color=\"inherit\" onClick={handleSave}>\n                        Salvar\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <div style={{width: '80%', alignContent: 'center', marginLeft: 'auto', marginRight: 'auto', marginTop: 10}}>\n                <form className={classes.form}>\n                    <Autocomplete\n                        id=\"clients-combo-box\"\n                        value={client}\n                        onChange={(event, newValue) => {\n                            console.log(newValue);\n                            setClient(newValue);\n                        }}\n                        options={clients}\n                        getOptionLabel={(product) => product.name}\n                        renderInput={(params) => <TextField {...params} label=\"Cliente\" fullWidth/>}\n                    />\n                    <Autocomplete\n                        id=\"products-combo-box\"\n                        onChange={(event, newValue) => {\n                            if(!!newValue) {\n                                const np = {\n                                    id: newValue.id,\n                                    name: newValue.name,\n                                    qt: 1,\n                                    max: newValue.quantity,\n                                }\n                                products[np.id] = np;\n                                setProducts([...products]);\n                            }\n                        }}\n                        options={productList}\n                        getOptionLabel={(product) => product.name}\n                        renderInput={(params) => <TextField {...params} label=\"Adicionar produto\" fullWidth/>}\n                    />\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>ID</TableCell>\n                                <TableCell>Nome</TableCell>\n                                <TableCell>Quantidade</TableCell>\n                                <TableCell align=\"right\" />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {products.filter((p) =>!!p).map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell>{row.id}</TableCell>\n                                    <TableCell>{row.name}</TableCell>\n                                    <TableCell>\n                                        <Grid container spacing={2} alignItems=\"center\">\n                                            <Grid item xs>\n                                                <Slider\n                                                    value={typeof row.quantity === 'number' ? row.quantity : 1}\n                                                    onChange={(event, newValue) => handleSliderChange(event, newValue, row.id)}\n                                                    aria-labelledby=\"input-slider\"\n                                                    min={1}\n                                                    max={row.max}\n                                                />\n                                            </Grid>\n                                            <Grid item>\n                                                <Input\n                                                    className={classes.input}\n                                                    value={row.quantity}\n                                                    margin=\"dense\"\n                                                    onChange={(event) => handleInputChange(event, row.id)}\n                                                    onBlur={() => handleBlur(row.id)}\n                                                    inputProps={{\n                                                        step: 1,\n                                                        min: 1,\n                                                        max: row.max,\n                                                        type: 'number',\n                                                        'aria-labelledby': 'input-slider',\n                                                    }}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <IconButton onClick={() => {\n                                            products[row.id] = null;\n                                            setProducts([...products]);\n                                        }}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                    {/*<TextField*/}\n                    {/*    autoFocus*/}\n                    {/*    id=\"name\"*/}\n                    {/*    label=\"Nome\"*/}\n                    {/*    type=\"text\"*/}\n                    {/*    fullWidth*/}\n                    {/*/>*/}\n                </form>\n            </div>\n        </Dialog>\n    );\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}