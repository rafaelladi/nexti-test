{"ast":null,"code":"var _jsxFileName = \"/home/rafael/IdeaProjects/nexti-test-front/src/order/NewOrder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from \"@material-ui/core/TextField\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Input from \"@material-ui/core/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  form: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    width: 42\n  }\n}));\nconst clients = [{\n  id: 1,\n  name: 'rafael'\n}, {\n  id: 2,\n  name: 'vitoria'\n}];\nconst productList = [{\n  id: 1,\n  name: 'bola',\n  price: 10.05,\n  quantity: 100\n}, {\n  id: 2,\n  name: 'grip',\n  price: 10.05,\n  quantity: 36\n}, {\n  id: 3,\n  name: 'camiseta',\n  price: 10.05,\n  quantity: 49\n}, {\n  id: 4,\n  name: 'tenis',\n  price: 10.05,\n  quantity: 64\n}, {\n  id: 5,\n  name: 'raquete',\n  price: 10.05,\n  quantity: 81\n}];\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\n\nconst NewOrder = ({\n  open,\n  handleClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [client, setClient] = useState(null);\n  const [product, setProduct] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  const handleSliderChange = (event, newValue, i) => {\n    products[i].quantity = newValue;\n    setProducts([...products]);\n  };\n\n  const handleInputChange = (event, i) => {\n    products[i].quantity = event.target.value === '' ? '' : Number(event.target.value);\n    setProducts([...products]);\n  };\n\n  const handleBlur = i => {\n    if (products[i].quantity < 0) {\n      products[i].quantity = 0;\n      setProducts([...products]);\n    } else if (products[i].quantity > products[i].max) {\n      products[i].quantity = products[i].max;\n      setProducts([...products]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          onClick: handleClose,\n          \"aria-label\": \"close\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          color: \"inherit\",\n          onClick: handleClose,\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        alignContent: 'center',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"clients-combo-box\",\n          value: client,\n          onChange: (event, newValue) => {\n            setClient(newValue);\n          },\n          options: clients,\n          getOptionLabel: product => product.name,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Cliente\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"products-combo-box\",\n          value: product,\n          onChange: (event, newValue) => {\n            const np = {\n              id: newValue.id,\n              name: newValue.name,\n              quantity: 1,\n              max: newValue.quantity\n            };\n            products[np.id] = np;\n            setProducts([...products]);\n            setProduct(null);\n          },\n          options: productList,\n          getOptionLabel: product => product.name,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Adicionar produto\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Quantidade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: products.filter(p => !!p).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: true,\n                    children: /*#__PURE__*/_jsxDEV(Slider, {\n                      value: typeof products[row.id].quantity === 'number' ? products[row.id].quantity : 0,\n                      onChange: (event, newValue) => handleSliderChange(event, newValue, row.id),\n                      \"aria-labelledby\": \"input-slider\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      className: classes.input,\n                      value: products[row.id].quantity,\n                      margin: \"dense\",\n                      onChange: event => handleInputChange(event, row.id),\n                      onBlur: () => handleBlur(row.id),\n                      inputProps: {\n                        step: 10,\n                        min: 1,\n                        max: row.max,\n                        type: 'number',\n                        'aria-labelledby': 'input-slider'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => {\n                    products[row.id] = null;\n                    setProducts([...products]);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewOrder, \"i18M7Qi+TlkrvkAQdIdIn/UxWx8=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = NewOrder;\nexport default NewOrder;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"NewOrder\");","map":{"version":3,"sources":["/home/rafael/IdeaProjects/nexti-test-front/src/order/NewOrder.js"],"names":["React","useState","makeStyles","Button","Dialog","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","TextField","Autocomplete","Table","TableHead","TableRow","TableCell","TableBody","DeleteIcon","Grid","Slider","Input","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","form","margin","input","width","clients","id","name","productList","price","quantity","Transition","forwardRef","props","ref","NewOrder","open","handleClose","classes","client","setClient","product","setProduct","products","setProducts","handleSliderChange","event","newValue","i","handleInputChange","target","value","Number","handleBlur","max","alignContent","marginRight","marginTop","params","np","filter","p","map","row","step","min","type"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from \"@material-ui/core/TextField\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Input from \"@material-ui/core/Input\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    form: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        width: 42,\n    },\n}));\n\nconst clients = [\n    {id: 1, name: 'rafael'},\n    {id: 2, name: 'vitoria'},\n]\n\nconst productList = [\n    {id: 1, name: 'bola', price: 10.05, quantity: 100},\n    {id: 2, name: 'grip', price: 10.05, quantity: 36},\n    {id: 3, name: 'camiseta', price: 10.05, quantity: 49},\n    {id: 4, name: 'tenis', price: 10.05, quantity: 64},\n    {id: 5, name: 'raquete', price: 10.05, quantity: 81},\n]\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst NewOrder = ({open, handleClose}) => {\n    const classes = useStyles();\n    const [client, setClient] = useState(null);\n    const [product, setProduct] = useState(null);\n    const [products, setProducts] = useState([]);\n\n    const handleSliderChange = (event, newValue, i) => {\n        products[i].quantity = newValue;\n        setProducts([...products]);\n    };\n\n    const handleInputChange = (event, i) => {\n        products[i].quantity = event.target.value === '' ? '' : Number(event.target.value);\n        setProducts([...products]);\n    };\n\n    const handleBlur = (i) => {\n        if(products[i].quantity < 0) {\n            products[i].quantity = 0;\n            setProducts([...products]);\n        } else if(products[i].quantity > products[i].max) {\n            products[i].quantity = products[i].max;\n            setProducts([...products]);\n        }\n    };\n\n    return (\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Pedido\n                    </Typography>\n                    <Button autoFocus color=\"inherit\" onClick={handleClose}>\n                        Salvar\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <div style={{width: '80%', alignContent: 'center', marginLeft: 'auto', marginRight: 'auto', marginTop: 10}}>\n                <form className={classes.form}>\n                    <Autocomplete\n                        id=\"clients-combo-box\"\n                        value={client}\n                        onChange={(event, newValue) => {\n                            setClient(newValue);\n                        }}\n                        options={clients}\n                        getOptionLabel={(product) => product.name}\n                        renderInput={(params) => <TextField {...params} label=\"Cliente\" fullWidth/>}\n                    />\n                    <Autocomplete\n                        id=\"products-combo-box\"\n                        value={product}\n                        onChange={(event, newValue) => {\n                            const np = {\n                                id: newValue.id,\n                                name: newValue.name,\n                                quantity: 1,\n                                max: newValue.quantity,\n                            }\n                            products[np.id] = np;\n                            setProducts([...products]);\n                            setProduct(null);\n                        }}\n                        options={productList}\n                        getOptionLabel={(product) => product.name}\n                        renderInput={(params) => <TextField {...params} label=\"Adicionar produto\" fullWidth/>}\n                    />\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>ID</TableCell>\n                                <TableCell>Nome</TableCell>\n                                <TableCell>Quantidade</TableCell>\n                                <TableCell align=\"right\" />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {products.filter((p) =>!!p).map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell>{row.id}</TableCell>\n                                    <TableCell>{row.name}</TableCell>\n                                    <TableCell>\n                                        <Grid container spacing={2} alignItems=\"center\">\n                                            <Grid item xs>\n                                                <Slider\n                                                    value={typeof products[row.id].quantity === 'number' ? products[row.id].quantity : 0}\n                                                    onChange={(event, newValue) => handleSliderChange(event, newValue, row.id)}\n                                                    aria-labelledby=\"input-slider\"\n                                                />\n                                            </Grid>\n                                            <Grid item>\n                                                <Input\n                                                    className={classes.input}\n                                                    value={products[row.id].quantity}\n                                                    margin=\"dense\"\n                                                    onChange={(event) => handleInputChange(event, row.id)}\n                                                    onBlur={() => handleBlur(row.id)}\n                                                    inputProps={{\n                                                        step: 10,\n                                                        min: 1,\n                                                        max: row.max,\n                                                        type: 'number',\n                                                        'aria-labelledby': 'input-slider',\n                                                    }}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <IconButton onClick={() => {\n                                            products[row.id] = null;\n                                            setProducts([...products]);\n                                        }}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                    {/*<TextField*/}\n                    {/*    autoFocus*/}\n                    {/*    id=\"name\"*/}\n                    {/*    label=\"Nome\"*/}\n                    {/*    type=\"text\"*/}\n                    {/*    fullWidth*/}\n                    {/*/>*/}\n                </form>\n            </div>\n        </Dialog>\n    );\n}\n\nexport default NewOrder;"]},"metadata":{},"sourceType":"module"}